package com.mondrew.microservicios.commons.controllers;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.mondrew.microservicios.app.usuarios.models.entity.Estudiante;
import com.mondrew.microservicios.app.usuarios.services.EstudianteService;

@RestController
public class CommonController {

	@Autowired
	private EstudianteService estudianteService;

	@GetMapping
	public ResponseEntity<?> listar() {
		return ResponseEntity.ok().body(estudianteService.findAll());
	}

	@GetMapping("/{id}")
	public ResponseEntity<?> ver(@PathVariable Long id) {
		Optional<Estudiante> estudiante = estudianteService.findById(id);
		return estudiante.isEmpty() ? ResponseEntity.notFound().build() : ResponseEntity.ok(estudiante.get());
	}

	@PostMapping
	public ResponseEntity<?> crear(@RequestBody Estudiante estudianteBody) {
		return ResponseEntity.status(HttpStatus.CREATED).body(estudianteService.save(estudianteBody));
	}

	@PutMapping("/{id}")
	public ResponseEntity<?> editar(@PathVariable Long id, @RequestBody Estudiante estudianteBody) {
		Optional<Estudiante> estudiante = estudianteService.findById(id);
		if (estudiante.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		Estudiante estudianteBd = estudiante.get();
		estudianteBd.setNombre(estudianteBody.getNombre());
		estudianteBd.setApellido(estudianteBody.getApellido());
		estudianteBd.setEmail(estudianteBody.getEmail());
		return ResponseEntity.status(HttpStatus.CREATED).body(estudianteService.save(estudianteBd));
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<?> eliminar(@PathVariable Long id){
		estudianteService.deleteById(id);
		return ResponseEntity.noContent().build();
	}
	

}
